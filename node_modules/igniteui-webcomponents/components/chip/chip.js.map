{"version":3,"file":"chip.js","sourceRoot":"","sources":["../../../src/components/chip/chip.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { blazorTwoWayBind } from '../common/decorators/blazorTwoWayBind.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport IgcIconComponent from '../icon/icon.js';\nimport { styles } from './themes/light/chip.base.css.js';\nimport { styles as material } from './themes/light/chip.material.css.js';\nimport { styles as bootstrap } from './themes/light/chip.bootstrap.css.js';\nimport { styles as fluent } from './themes/light/chip.fluent.css.js';\nimport { styles as indigo } from './themes/light/chip.indigo.css.js';\n\nexport interface IgcChipEventMap {\n  igcRemove: CustomEvent<boolean>;\n  igcSelect: CustomEvent<boolean>;\n}\n/**\n * Chips help people enter information, make selections, filter content, or trigger actions.\n *\n * @element igc-chip\n *\n * @slot - Renders the chip data.\n * @slot prefix - Renders content before the data of the chip.\n * @slot suffix - Renders content after the data of the chip.\n *\n * @fires igcRemove - Emits an event when the chip component is removed. Returns the removed chip component.\n * @fires igcSelect - Emits event when the chip component is selected/deselected and any related animations and transitions also end.\n *\n * @csspart base - The base wrapper of the chip.\n * @csspart prefix - The prefix container of the chip.\n * @csspart suffix - The suffix container of the chip.\n */\n@themes({\n  light: { material, bootstrap, fluent, indigo },\n  dark: { material, bootstrap, fluent, indigo },\n})\nexport default class IgcChipComponent extends SizableMixin(\n  EventEmitterMixin<IgcChipEventMap, Constructor<LitElement>>(LitElement)\n) {\n  public static readonly tagName = 'igc-chip';\n  public static styles = styles;\n\n  public static register() {\n    registerComponent(this, IgcIconComponent);\n  }\n\n  /**\n   * Sets the disabled state for the chip.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Defines if the chip is removable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public removable = false;\n\n  /**\n   * Defines if the chip is selectable or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public selectable = false;\n\n  /**\n   * Defines if the chip is selected or not.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  @blazorTwoWayBind('igcSelect', 'detail')\n  public selected = false;\n\n  /**\n   * A property that sets the color variant of the chip component.\n   * @attr\n   */\n  @property({ reflect: true })\n  public variant!: 'primary' | 'success' | 'danger' | 'warning' | 'info';\n\n  constructor() {\n    super();\n    this.size = 'medium';\n  }\n\n  protected handleSelect() {\n    if (this.selectable) {\n      this.selected = !this.selected;\n      this.emitEvent('igcSelect', { detail: this.selected });\n    }\n  }\n\n  protected handleRemove(e: Event) {\n    this.emitEvent('igcRemove');\n    e.stopPropagation();\n  }\n\n  protected handleKeyup(e: KeyboardEvent) {\n    if (/\\s|enter/i.test(e.key)) {\n      this.handleRemove(e);\n    }\n  }\n\n  protected override render() {\n    return html`\n      <button\n        part=\"base\"\n        .disabled=\"${this.disabled}\"\n        aria-selected=\"${this.selected ? 'true' : 'false'}\"\n        aria-disabled=\"${this.disabled ? 'true' : 'false'}\"\n        @click=${this.handleSelect}\n      >\n        <span part=\"prefix\">\n          ${this.selectable && this.selected\n            ? html`<slot @slotchange=${this.slotChanges} name=\"select\">\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_select\"\n                  collection=\"internal\"\n                ></igc-icon>\n              </slot>`\n            : nothing}\n          <slot name=\"start\"></slot>\n          <slot name=\"prefix\"></slot>\n        </span>\n        <slot></slot>\n        <span part=\"suffix\">\n          <slot name=\"end\"></slot>\n          <slot name=\"suffix\"></slot>\n          ${this.removable && !this.disabled\n            ? html`<slot\n                @slotchange=${this.slotChanges}\n                @click=${this.handleRemove}\n                @keyup=${this.handleKeyup}\n                name=\"remove\"\n              >\n                <igc-icon\n                  size=${this.size}\n                  name=\"chip_cancel\"\n                  collection=\"internal\"\n                  tabindex=\"0\"\n                  role=\"button\"\n                  aria-label=\"remove\"\n                ></igc-icon>\n              </slot>`\n            : nothing}\n        </span>\n      </button>\n    `;\n  }\n\n  protected slotChanges() {\n    this.requestUpdate();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-chip': IgcChipComponent;\n  }\n}\n"]}