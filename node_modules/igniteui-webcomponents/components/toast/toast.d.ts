import { LitElement } from 'lit';
/**
 * A toast component is used to show a notification
 *
 * @element igc-toast
 *
 * @csspart base - The base wrapper of the toast.
 */
export default class IgcToastComponent extends LitElement {
    static readonly tagName = "igc-toast";
    static styles: import("lit").CSSResult[];
    static register(): void;
    private displayTimeout;
    private animationPlayer;
    /**
     * Determines whether the toast is opened.
     * @attr
     */
    open: boolean;
    /**
     * Determines the time after which the toast will close
     * @attr display-time
     */
    displayTime: number;
    /**
     * Determines whether the toast is closed automatically or not.
     * @attr keep-open
     */
    keepOpen: boolean;
    /**
     * Sets the position of the toast.
     * @attr position
     */
    position: 'bottom' | 'middle' | 'top';
    protected firstUpdated(): void;
    private toggleAnimation;
    /** Closes the toast. */
    hide(): Promise<void>;
    /** Opens the toast. */
    show(): void;
    /** Toggles the open state of the toast. */
    toggle(): void;
    connectedCallback(): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-toast': IgcToastComponent;
    }
}
