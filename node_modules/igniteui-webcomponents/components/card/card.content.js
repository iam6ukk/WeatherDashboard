var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { themes } from '../../theming/theming-decorator.js';
import { registerComponent } from '../common/definitions/register.js';
import { styles } from './themes/light/card.content.base.css.js';
import { styles as bootstrap } from './themes/light/card.content.bootstrap.css.js';
import { styles as fluent } from './themes/light/card.content.fluent.css.js';
import { styles as indigo } from './themes/light/card.content.indigo.css.js';
import { styles as material } from './themes/light/card.content.material.css.js';
let IgcCardContentComponent = class IgcCardContentComponent extends LitElement {
    static register() {
        registerComponent(this);
    }
    render() {
        return html ` <slot></slot> `;
    }
};
IgcCardContentComponent.tagName = 'igc-card-content';
IgcCardContentComponent.styles = styles;
IgcCardContentComponent = __decorate([
    themes({
        light: {
            material,
            bootstrap,
            fluent,
            indigo,
        },
        dark: {
            material,
            bootstrap,
            fluent,
            indigo,
        },
    })
], IgcCardContentComponent);
export default IgcCardContentComponent;
//# sourceMappingURL=card.content.js.map