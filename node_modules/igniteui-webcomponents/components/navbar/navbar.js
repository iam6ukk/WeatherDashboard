var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { themes } from '../../theming/theming-decorator.js';
import { registerComponent } from '../common/definitions/register.js';
import { styles as bootstrap } from './themes/light/navbar.bootstrap.css.js';
import { styles as fluent } from './themes/light/navbar.fluent.css.js';
import { styles as indigo } from './themes/light/navbar.indigo.css.js';
import { styles as material } from './themes/light/navbar.material.css.js';
import { styles } from './themes/navbar.base.css.js';
let IgcNavbarComponent = class IgcNavbarComponent extends LitElement {
    static register() {
        registerComponent(this);
    }
    render() {
        return html `
      <div part="base">
        <span part="start">
          <slot name="start"></slot>
        </span>
        <span part="middle">
          <slot></slot>
        </span>
        <span part="end">
          <slot name="end"></slot>
        </span>
      </div>
    `;
    }
};
IgcNavbarComponent.tagName = 'igc-navbar';
IgcNavbarComponent.styles = styles;
IgcNavbarComponent = __decorate([
    themes({
        light: { material, bootstrap, fluent, indigo },
        dark: { material, bootstrap, fluent, indigo },
    })
], IgcNavbarComponent);
export default IgcNavbarComponent;
//# sourceMappingURL=navbar.js.map