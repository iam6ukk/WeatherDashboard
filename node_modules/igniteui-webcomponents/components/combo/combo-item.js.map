{"version":3,"file":"combo-item.js","sourceRoot":"","sources":["../../../src/components/combo/combo-item.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,oBAAoB,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,MAAM,IAAI,SAAS,EAAE,MAAM,8DAA8D,CAAC;AACnG,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,2DAA2D,CAAC;AAC7F,OAAO,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,2DAA2D,CAAC;AAC7F,OAAO,EAAE,MAAM,IAAI,QAAQ,EAAE,MAAM,6DAA6D,CAAC;AACjG,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AAOpE,IAAqB,qBAAqB,GAA1C,MAAqB,qBAAsB,SAAQ,UAAU;IAA7D;;QAgBS,aAAQ,GAAG,KAAK,CAAC;QAMjB,WAAM,GAAG,KAAK,CAAC;QAOf,iBAAY,GAAG,KAAK,CAAC;IAiC9B,CAAC;IA1DQ,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;IAChD,CAAC;IA0BS,cAAc;QACtB,IAAI,CAAC,QAAQ;YACX,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;YAC5C,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;IAC5C,CAAC;IAEe,iBAAiB;QAC/B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,CAAA;;;mBAGI,IAAI,CAAC,QAAQ;;;;eAIjB,CAAC;IACd,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;QACP,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,OAAO;;;;KAIvD,CAAC;IACJ,CAAC;;AA5DsB,6BAAO,GAAW,gBAAgB,AAA3B,CAA4B;AACnC,4BAAM,GAAG,MAAM,AAAT,CAAU;AAOhC;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;oDACT;AAOf;IADN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;uDACnB;AAMjB;IADN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qDACrB;AAOf;IADN,QAAQ,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;2DAC5C;AAGlB;IADT,KAAK,CAAC,UAAU,CAAC;2DAKjB;AApCkB,qBAAqB;IAJzC,MAAM,CAAC;QACN,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;QAC9C,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;KAC9C,CAAC;GACmB,qBAAqB,CA8DzC;eA9DoB,qBAAqB","sourcesContent":["import { html, LitElement, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport IgcCheckboxComponent from '../checkbox/checkbox.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport { styles as bootstrap } from '../dropdown/themes/light/item/dropdown-item.bootstrap.css.js';\nimport { styles as fluent } from '../dropdown/themes/light/item/dropdown-item.fluent.css.js';\nimport { styles as indigo } from '../dropdown/themes/light/item/dropdown-item.indigo.css.js';\nimport { styles as material } from '../dropdown/themes/light/item/dropdown-item.material.css.js';\nimport { styles } from './themes/light/item/combo-item.base.css.js';\n\n/* blazorSuppress */\n@themes({\n  light: { bootstrap, fluent, indigo, material },\n  dark: { bootstrap, fluent, indigo, material },\n})\nexport default class IgcComboItemComponent extends LitElement {\n  public static readonly tagName: string = 'igc-combo-item';\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this, IgcCheckboxComponent);\n  }\n\n  @property({ attribute: false })\n  public index!: number;\n\n  /**\n   * Determines whether the item is selected.\n   * @attr selected\n   */\n  @property({ type: Boolean, reflect: true })\n  public selected = false;\n\n  /**\n   * Determines whether the item is active.\n   */\n  @property({ type: Boolean, reflect: true })\n  public active = false;\n\n  /**\n   * Determines whether the item is active.\n   * @attr hide-checkbox\n   */\n  @property({ attribute: 'hide-checkbox', type: Boolean, reflect: false })\n  public hideCheckbox = false;\n\n  @watch('selected')\n  protected selectedChange() {\n    this.selected\n      ? this.setAttribute('aria-selected', 'true')\n      : this.removeAttribute('aria-selected');\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'option');\n  }\n\n  private renderCheckbox() {\n    return html`<section part=\"prefix\">\n      <igc-checkbox\n        aria-hidden=\"true\"\n        ?checked=${this.selected}\n        tabindex=\"-1\"\n        exportparts=\"control: checkbox, indicator: checkbox-indicator, checked\"\n      ></igc-checkbox>\n    </section>`;\n  }\n\n  protected override render() {\n    return html`\n      ${!this.hideCheckbox ? this.renderCheckbox() : nothing}\n      <section id=\"content\" part=\"content\">\n        <slot></slot>\n      </section>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-combo-item': IgcComboItemComponent;\n  }\n}\n"]}