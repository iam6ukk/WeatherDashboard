var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { queryAssignedElements } from 'lit/decorators.js';
import { themes } from '../../theming/theming-decorator.js';
import { blazorSuppress } from '../common/decorators/blazorSuppress.js';
import { registerComponent } from '../common/definitions/register.js';
import { styles } from './themes/light/group/dropdown-group.base.css.js';
import { styles as bootstrap } from './themes/light/group/dropdown-group.bootstrap.css.js';
import { styles as fluent } from './themes/light/group/dropdown-group.fluent.css.js';
import { styles as indigo } from './themes/light/group/dropdown-group.indigo.css.js';
import { styles as material } from './themes/light/group/dropdown-group.material.css.js';
let IgcDropdownGroupComponent = class IgcDropdownGroupComponent extends LitElement {
    static register() {
        registerComponent(this);
    }
    connectedCallback() {
        super.connectedCallback();
        this.setAttribute('role', 'group');
        this.parent = this.getParent();
    }
    getParent() {
        return this.closest('igc-dropdown');
    }
    render() {
        return html `
      <label part="label"><slot name="label"></slot></label>
      <slot></slot>
    `;
    }
};
IgcDropdownGroupComponent.tagName = 'igc-dropdown-group';
IgcDropdownGroupComponent.styles = styles;
__decorate([
    blazorSuppress(),
    queryAssignedElements({ flatten: true, selector: 'igc-dropdown-item' })
], IgcDropdownGroupComponent.prototype, "items", void 0);
IgcDropdownGroupComponent = __decorate([
    themes({
        light: { fluent, bootstrap, indigo, material },
        dark: { fluent, bootstrap, indigo, material },
    })
], IgcDropdownGroupComponent);
export default IgcDropdownGroupComponent;
//# sourceMappingURL=dropdown-group.js.map