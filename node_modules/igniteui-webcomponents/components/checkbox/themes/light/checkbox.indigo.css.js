import { css } from 'lit';
export const styles = css `:host {
  --is-large: clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-large, 3), 1);
  --is-medium: min(
      clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-medium, 2), 1),
      clamp(0, var(--ig-size-large, 3) - var(--component-size, 1), 1)
  );
  --is-small: clamp(0, var(--ig-size-medium) - var(--component-size, 1), 1);
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scrollbar-width: var(--ig-scrollbar-size);
  scrollbar-color: var(--ig-scrollbar-thumb-background) var(--ig-scrollbar-track-background);
}
:host *,
:host *::before,
:host *::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}
:host ::-webkit-scrollbar {
  width: var(--ig-scrollbar-size);
  height: var(--ig-scrollbar-size);
  background: var(--ig-scrollbar-track-background);
}
:host ::-webkit-scrollbar-thumb {
  background: var(--ig-scrollbar-thumb-background);
}

:host([hidden]),
[hidden] {
  display: none !important;
}
:host {
  --tick-color: var(--ig-checkbox-tick-color, hsla(var(--ig-surface-500), var(--ig-surface-a)));
  --tick-color-hover: var(--ig-checkbox-tick-color-hover, hsla(var(--ig-surface-500), var(--ig-surface-a)));
  --label-color: var(--ig-checkbox-label-color, hsla(var(--ig-gray-900), var(--ig-gray-a)));
  --empty-color: var(--ig-checkbox-empty-color, hsla(var(--ig-gray-500), var(--ig-gray-a)));
  --fill-color: var(--ig-checkbox-fill-color, hsla(var(--ig-primary-500), var(--ig-primary-a)));
  --fill-color-hover: var(--ig-checkbox-fill-color-hover, hsla(var(--ig-primary-400), var(--ig-primary-a)));
  --disabled-color: var(--ig-checkbox-disabled-color, hsla(var(--ig-gray-300), var(--ig-gray-a)));
  --disabled-indeterminate-color: var(--ig-checkbox-disabled-indeterminate-color, hsla(var(--ig-primary-200), var(--ig-primary-a)));
  --disabled-color-label: var(--ig-checkbox-disabled-color-label, hsla(var(--ig-gray-300), var(--ig-gray-a)));
  --error-color: var(--ig-checkbox-error-color, hsla(var(--ig-error-500), var(--ig-error-a)));
  --error-color-hover: var(--ig-checkbox-error-color-hover, hsla(var(--ig-error-200), var(--ig-error-a)));
  --border-radius: var(--ig-checkbox-border-radius, clamp(0rem, calc(var(--ig-radius-factor, 0.3) * 0.625rem), 0.625rem));
  --border-radius-ripple: var(--ig-checkbox-border-radius-ripple, clamp(0rem, calc(var(--ig-radius-factor, 0.125) * 1.5rem), 1.5rem));
  --focus-outline-color: var(--ig-checkbox-focus-outline-color, hsla(var(--ig-gray-300), var(--ig-gray-a)));
  --focus-outline-color-focused: var(--ig-checkbox-focus-outline-color-focused, hsla(var(--ig-primary-200), var(--ig-primary-a)));
  font-weight: 600;
}

[part~=label] {
  font-family: var(--ig-body-1-font-family, var(--ig-font-family));
  font-size: var(--ig-body-1-font-size);
  font-weight: var(--ig-body-1-font-weight);
  font-style: var(--ig-body-1-font-style);
  line-height: var(--ig-body-1-line-height);
  letter-spacing: var(--ig-body-1-letter-spacing);
  text-transform: var(--ig-body-1-text-transform);
  margin-top: var(--ig-body-1-margin-top);
  margin-bottom: var(--ig-body-1-margin-bottom);
  color: var(--label-color);
}

[part~=control] {
  border-radius: var(--border-radius-ripple);
  width: var(--size, 1.25rem);
  height: var(--size, 1.25rem);
  min-width: var(--size, 1.25rem);
  -webkit-transition: background 0.15s ease-in;
  transition: background 0.15s ease-in;
}
[part~=control]::after {
  border-radius: var(--border-radius);
  border: 0.125rem solid var(--empty-color);
  -webkit-transition: border-color 0.15s ease-in;
  transition: border-color 0.15s ease-in;
}

[part="control checked"]::after {
  border-color: var(--fill-color);
  background: var(--fill-color);
}

[part~=indicator] {
  stroke: var(--tick-color);
  -webkit-transform: scale(0.8);
      -ms-transform: scale(0.8);
          transform: scale(0.8);
}

[part="indicator checked"] {
  -webkit-transition-duration: 0.15s;
          transition-duration: 0.15s;
}

:host(:hover) [part="control checked"]::after {
  background: var(--fill-color-hover);
  border-color: var(--fill-color-hover);
}

:host(:focus-within) [part~=control] {
  -webkit-box-shadow: 0 0 0 0.1875rem var(--focus-outline-color);
          box-shadow: 0 0 0 0.1875rem var(--focus-outline-color);
}
:host(:focus-within) [part="control checked"] {
  -webkit-box-shadow: 0 0 0 0.1875rem var(--focus-outline-color-focused);
          box-shadow: 0 0 0 0.1875rem var(--focus-outline-color-focused);
}

:host([indeterminate]) [part~=indicator] {
  -webkit-transform: rotate(45deg) translateX(-0.125rem) scale(0.8);
      -ms-transform: rotate(45deg) translateX(-0.125rem) scale(0.8);
          transform: rotate(45deg) translateX(-0.125rem) scale(0.8);
}
:host([indeterminate]) [part~=control] {
  background: var(--fill-color);
}
:host([indeterminate]) [part~=control]::after {
  border-color: var(--fill-color);
}

:host([indeterminate]:hover) [part~=control] {
  background: var(--fill-color-hover);
}
:host([indeterminate]:hover) [part~=control]::after {
  border-color: var(--fill-color-hover);
}

:host([indeterminate]:focus-within) [part~=control] {
  -webkit-box-shadow: 0 0 0 0.25rem hsla(var(--ig-secondary-200), 0.87);
          box-shadow: 0 0 0 0.25rem hsla(var(--ig-secondary-200), 0.87);
}

:host(:not([disabled])[invalid]) [part~=label],
:host(:not(:disabled)[invalid]) [part~=label] {
  color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=control]::after,
:host(:not(:disabled)[invalid]) [part~=control]::after {
  border-color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part="control checked"],
:host(:not(:disabled)[invalid]) [part="control checked"] {
  -webkit-box-shadow: inset 0 0 0 0.25rem var(--error-color);
          box-shadow: inset 0 0 0 0.25rem var(--error-color);
  background: var(--error-color);
}
:host(:not([disabled])[invalid]) [part="control checked"]::after,
:host(:not(:disabled)[invalid]) [part="control checked"]::after {
  background: var(--error-color);
}

:host(:hover:not([disabled])[invalid]) [part~=control],
:host(:hover:not([disabled])[invalid]) [part="control checked"],
:host(:hover:not(:disabled)[invalid]) [part~=control],
:host(:hover:not(:disabled)[invalid]) [part="control checked"] {
  -webkit-box-shadow: 0 0 0 0.25rem var(--error-color-hover);
          box-shadow: 0 0 0 0.25rem var(--error-color-hover);
}

:host(:focus-within:not([disabled])[invalid]) [part~=control],
:host(:focus-within:not([disabled])[invalid]) [part="control checked"],
:host(:focus-within:not(:disabled)[invalid]) [part~=control],
:host(:focus-within:not(:disabled)[invalid]) [part="control checked"] {
  -webkit-box-shadow: 0 0 0 0.25rem var(--error-color-hover);
          box-shadow: 0 0 0 0.25rem var(--error-color-hover);
}

:host(:not([disabled])[invalid][indeterminate]) [part~=control],
:host(:not(:disabled)[invalid][indeterminate]) [part~=control] {
  -webkit-box-shadow: inset 0 0 0 0.25rem var(--error-color);
          box-shadow: inset 0 0 0 0.25rem var(--error-color);
  background: var(--error-color);
}

:host(:hover:not([disabled])[invalid][indeterminate]) [part~=control],
:host(:hover:not(:disabled)[invalid][indeterminate]) [part~=control] {
  -webkit-box-shadow: 0 0 0 0.25rem var(--error-color-hover);
          box-shadow: 0 0 0 0.25rem var(--error-color-hover);
}

:host(:focus-within:not([disabled])[invalid][indeterminate]) [part~=control],
:host(:focus-within:not(:disabled)[invalid][indeterminate]) [part~=control] {
  -webkit-box-shadow: 0 0 0 0.25rem var(--error-color-hover);
          box-shadow: 0 0 0 0.25rem var(--error-color-hover);
}

:host([disabled]) [part~=control]::after,
:host(:disabled) [part~=control]::after,
:host([disabled][invalid]) [part~=control]::after,
:host(:disabled[invalid]) [part~=control]::after {
  border-color: var(--disabled-color);
}
:host([disabled]) [part="control checked"]::after,
:host(:disabled) [part="control checked"]::after,
:host([disabled][invalid]) [part="control checked"]::after,
:host(:disabled[invalid]) [part="control checked"]::after {
  background: var(--disabled-indeterminate-color);
  border-color: var(--disabled-indeterminate-color);
}
:host([disabled]) [part~=label],
:host(:disabled) [part~=label],
:host([disabled][invalid]) [part~=label],
:host(:disabled[invalid]) [part~=label] {
  color: var(--disabled-color-label);
}

:host([disabled][indeterminate]) [part~=control]::after,
:host(:disabled[indeterminate]) [part~=control]::after {
  background: var(--disabled-indeterminate-color);
  border-color: var(--disabled-indeterminate-color);
}`;
//# sourceMappingURL=checkbox.indigo.css.js.map