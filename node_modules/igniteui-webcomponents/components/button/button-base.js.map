{"version":3,"file":"button-base.js","sourceRoot":"","sources":["../../../src/components/button/button-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, TemplateResult } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { EventEmitterMixin } from '../common//mixins/event-emitter.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\n\nexport interface IgcButtonEventMap {\n  igcFocus: CustomEvent<void>;\n  igcBlur: CustomEvent<void>;\n}\n\n@blazorDeepImport\nexport abstract class IgcButtonBaseComponent extends SizableMixin(\n  EventEmitterMixin<IgcButtonEventMap, Constructor<LitElement>>(LitElement)\n) {\n  public static readonly formAssociated = true;\n  protected static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  private __internals: ElementInternals;\n\n  @query('[part=\"base\"]', true)\n  private nativeElement!: HTMLElement;\n\n  protected _disabled = false;\n\n  /**\n   * The type of the button. Defaults to undefined.\n   * @attr\n   */\n  @alternateName('displayType')\n  @property()\n  public type!: 'button' | 'reset' | 'submit';\n\n  /**\n   * The URL the button points to.\n   * @attr\n   */\n  @property()\n  public href!: string;\n\n  /**\n   * Prompts to save the linked URL instead of navigating to it.\n   * @attr\n   */\n  @property()\n  public download!: string;\n\n  /**\n   * Where to display the linked URL, as the name for a browsing context.\n   * @attr\n   */\n  @property()\n  public target!: '_blank' | '_parent' | '_self' | '_top' | undefined;\n\n  /**\n   * The relationship of the linked URL.\n   * See https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types\n   * @attr\n   */\n  @property()\n  public rel!: string;\n\n  /**\n   * The disabled state of the component\n   * @attr [disabled=false]\n   */\n  @property({ type: Boolean, reflect: true })\n  public get disabled() {\n    return this._disabled;\n  }\n\n  public set disabled(value: boolean) {\n    const prev = this._disabled;\n    this._disabled = value;\n    this.toggleAttribute('disabled', Boolean(this._disabled));\n    this.requestUpdate('disabled', prev);\n  }\n\n  /** Returns the HTMLFormElement associated with this element. */\n  public get form() {\n    return this.__internals.form;\n  }\n\n  constructor() {\n    super();\n    this.__internals = this.attachInternals();\n  }\n\n  /** Sets focus in the button. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.nativeElement.focus(options);\n  }\n\n  /** Simulates a mouse click on the element */\n  public override click() {\n    this.nativeElement.click();\n  }\n\n  /** Removes focus from the button. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.nativeElement.blur();\n  }\n\n  protected handleFocus() {\n    this.emitEvent('igcFocus');\n  }\n\n  protected handleBlur() {\n    this.emitEvent('igcBlur');\n  }\n\n  protected get classes() {\n    return {};\n  }\n\n  protected handleClick() {\n    switch (this.type) {\n      case 'submit':\n        return this.form?.requestSubmit();\n      case 'reset':\n        return this.form?.reset();\n      default:\n        return;\n    }\n  }\n\n  protected formDisabledCallback(state: boolean) {\n    this._disabled = state;\n    this.requestUpdate();\n  }\n\n  private renderButton() {\n    return html`\n      <button\n        part=\"base\"\n        .ariaLabel=${this.ariaLabel}\n        .disabled=${this.disabled}\n        class=${classMap(this.classes)}\n        type=${ifDefined(this.type)}\n        @click=${this.handleClick}\n        @focus=${this.handleFocus}\n        @blur=${this.handleBlur}\n      >\n        ${this.renderContent()}\n      </button>\n    `;\n  }\n\n  private renderLinkButton() {\n    return html`\n      <a\n        part=\"base\"\n        role=\"button\"\n        href=${ifDefined(this.href)}\n        target=${ifDefined(this.target)}\n        download=${ifDefined(this.download)}\n        rel=${ifDefined(this.rel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        .ariaLabel=${this.ariaLabel}\n        class=${classMap(this.classes)}\n        @focus=${!this.disabled && this.handleFocus}\n        @blur=${!this.disabled && this.handleBlur}\n      >\n        ${this.renderContent()}\n      </a>\n    `;\n  }\n\n  protected abstract renderContent(): TemplateResult;\n\n  protected override render() {\n    const link = this.href !== undefined;\n    return link ? this.renderLinkButton() : this.renderButton();\n  }\n}\n"]}