var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { property } from 'lit/decorators.js';
import { themes } from '../../theming/theming-decorator.js';
import { registerComponent } from '../common/definitions/register.js';
import IgcRadioComponent from '../radio/radio.js';
import { styles } from './radio-group.base.css.js';
import { styles as fluent } from './radio-group.fluent.css.js';
import { styles as material } from './radio-group.material.css.js';
let IgcRadioGroupComponent = class IgcRadioGroupComponent extends LitElement {
    constructor() {
        super(...arguments);
        this.alignment = 'vertical';
    }
    static register() {
        registerComponent(this, IgcRadioComponent);
    }
    render() {
        return html `<slot></slot>`;
    }
};
IgcRadioGroupComponent.tagName = 'igc-radio-group';
IgcRadioGroupComponent.styles = styles;
__decorate([
    property({ reflect: true })
], IgcRadioGroupComponent.prototype, "alignment", void 0);
IgcRadioGroupComponent = __decorate([
    themes({ light: { material, fluent }, dark: { material, fluent } })
], IgcRadioGroupComponent);
export default IgcRadioGroupComponent;
//# sourceMappingURL=radio-group.js.map