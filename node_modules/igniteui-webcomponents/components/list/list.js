var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { themes } from '../../theming/theming-decorator.js';
import { SizableMixin } from '../common/mixins/sizable.js';
import { styles } from './themes/light/list.base.css.js';
import { styles as bootstrap } from './themes/light/list.bootstrap.css.js';
import { registerComponent } from '../common/definitions/register.js';
import IgcListHeaderComponent from './list-header.js';
import IgcListItemComponent from './list-item.js';
let IgcListComponent = class IgcListComponent extends SizableMixin(LitElement) {
    static register() {
        registerComponent(this, IgcListItemComponent, IgcListHeaderComponent);
    }
    connectedCallback() {
        super.connectedCallback();
        this.setAttribute('role', 'list');
    }
    render() {
        return html `<slot></slot>`;
    }
};
IgcListComponent.tagName = 'igc-list';
IgcListComponent.styles = styles;
IgcListComponent = __decorate([
    themes({ light: { bootstrap }, dark: { bootstrap } })
], IgcListComponent);
export default IgcListComponent;
//# sourceMappingURL=list.js.map