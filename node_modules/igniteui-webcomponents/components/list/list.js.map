{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../src/components/list/list.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAE,MAAM,IAAI,SAAS,EAAE,MAAM,sCAAsC,CAAC;AAE3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,sBAAsB,MAAM,kBAAkB,CAAC;AACtD,OAAO,oBAAoB,MAAM,gBAAgB,CAAC;AAUlD,IAAqB,gBAAgB,GAArC,MAAqB,gBAAiB,SAAQ,YAAY,CAAC,UAAU,CAAC;IAI7D,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,IAAI,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;IACxE,CAAC;IAEe,iBAAiB;QAC/B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;;AAdsB,wBAAO,GAAG,UAAU,AAAb,CAAc;AACrB,uBAAM,GAAG,MAAM,AAAT,CAAU;AAFpB,gBAAgB;IADpC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,EAAE,CAAC;GACjC,gBAAgB,CAgBpC;eAhBoB,gBAAgB","sourcesContent":["import { html, LitElement } from 'lit';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { SizableMixin } from '../common/mixins/sizable.js';\nimport { styles } from './themes/light/list.base.css.js';\nimport { styles as bootstrap } from './themes/light/list.bootstrap.css.js';\n\nimport { registerComponent } from '../common/definitions/register.js';\nimport IgcListHeaderComponent from './list-header.js';\nimport IgcListItemComponent from './list-item.js';\n\n/**\n * Displays a collection of data items in a templatable list format.\n *\n * @element igc-list\n *\n * @slot - Renders the list items and list headers inside default slot.\n */\n@themes({ light: { bootstrap }, dark: { bootstrap } })\nexport default class IgcListComponent extends SizableMixin(LitElement) {\n  public static readonly tagName = 'igc-list';\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this, IgcListItemComponent, IgcListHeaderComponent);\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'list');\n  }\n\n  protected override render() {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-list': IgcListComponent;\n  }\n}\n"]}