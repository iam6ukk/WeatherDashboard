{"version":3,"file":"circular-progress.js","sourceRoot":"","sources":["../../../src/components/progress/circular-progress.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, nothing, svg } from 'lit';\nimport { queryAssignedElements } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { when } from 'lit/directives/when.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { asPercent, partNameMap } from '../common/util.js';\nimport { IgcProgressBaseComponent } from './base.js';\nimport { styles } from './themes/circular/circular.progress.base.css.js';\nimport { styles as bootstrap } from './themes/circular/circular.progress.bootstrap.css.js';\nimport { styles as fluent } from './themes/circular/circular.progress.fluent.css.js';\n\nimport { registerComponent } from '../common/definitions/register.js';\nimport IgcCircularGradientComponent from './circular-gradient.js';\n\n/**\n * A circular progress indicator used to express unspecified wait time or display\n * the length of a process.\n *\n * @element igc-circular-progress\n *\n * @slot - The text area container.\n * @slot gradient - Customize the progress bar in order to use a color gradient instead of a solid color. Accepts `igc-circular-gradient` elements.\n *\n * @csspart svg\n * @csspart gradient_start\n * @csspart gradient_end\n * @csspart track\n * @csspart fill\n * @csspart label\n * @csspart value\n * @csspart indeterminate\n * @csspart primary\n * @csspart danger\n * @csspart warning\n * @csspart info\n * @csspart success\n */\n\n@themes({ light: { bootstrap, fluent }, dark: { bootstrap, fluent } })\nexport default class IgcCircularProgressComponent extends IgcProgressBaseComponent {\n  public static readonly tagName = 'igc-circular-progress';\n  public static override styles = styles;\n\n  public static register() {\n    registerComponent(this, IgcCircularGradientComponent);\n  }\n\n  protected gradientId = Date.now().toString(16);\n\n  @queryAssignedElements({ slot: 'gradient' })\n  protected gradientElements!: Array<IgcCircularGradientComponent>;\n\n  protected get stroke() {\n    return {\n      stroke: `url(#${this.gradientId})`,\n      '--percentage': (asPercent(this.value, this.max) / 100).toString(),\n      '--duration': this.animationDuration + 'ms',\n    };\n  }\n\n  protected get svgParts() {\n    return {\n      indeterminate: this.indeterminate,\n    };\n  }\n\n  private gradientChange() {\n    this.requestUpdate();\n  }\n\n  protected renderSvg() {\n    return svg`\n      <circle part=\"track ${partNameMap(this.svgParts)}\"/>\n      <circle style=\"${styleMap(this.stroke)}\" part=\"fill\"/>\n\n      <defs>\n          <linearGradient id=${this.gradientId} gradientTransform=\"rotate(90)\">\n          ${when(\n            this.gradientElements.length,\n            () =>\n              this.gradientElements.map((el: IgcCircularGradientComponent) => {\n                return svg`<stop offset=${el.offset} stop-color=${el.color} stop-opacity=${el.opacity}/>`;\n              }),\n            () => svg`\n              <stop offset=\"0%\" part=\"gradient_start\" />\n              <stop offset=\"100%\" part=\"gradient_end\" />\n          `\n          )}\n          </linearGradient>\n      </defs>\n    `;\n  }\n\n  protected renderWrapper() {\n    return html`\n      <svg\n        part=\"svg ${partNameMap(this.svgParts)}\"\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n      >\n        ${this.renderSvg()}\n      </svg>\n      <slot name=\"gradient\" @slotchange=${this.gradientChange}></slot>\n      ${this.renderDefaultSlot()}\n    `;\n  }\n\n  protected override render() {\n    return this.renderWrapper();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-circular-progress': IgcCircularProgressComponent;\n  }\n}\n"]}