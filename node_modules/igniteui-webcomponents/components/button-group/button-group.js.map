{"version":3,"file":"button-group.js","sourceRoot":"","sources":["../../../src/components/button-group/button-group.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, queryAssignedElements } from 'lit/decorators.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport { styles } from '../button-group/themes/light/button-group.base.css.js';\nimport { styles as bootstrap } from '../button-group/themes/light/button-group.bootstrap.css.js';\nimport { styles as fluent } from '../button-group/themes/light/button-group.fluent.css.js';\nimport { styles as indigo } from '../button-group/themes/light/button-group.indigo.css.js';\nimport { styles as material } from '../button-group/themes/light/button-group.material.css.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport type { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport IgcToggleButtonComponent from './toggle-button.js';\n\nexport interface IgcButtonGroupComponentEventMap {\n  igcSelect: CustomEvent<string | undefined>;\n  igcDeselect: CustomEvent<string | undefined>;\n}\n\n/**\n * The `igc-button-group` groups a series of `igc-toggle-button`s together, exposing features such as layout and selection.\n *\n * @element igc-button-group\n *\n * @slot - Renders `igc-toggle-button` component.\n *\n * @fires igcSelect - Emitted when a button is selected through user interaction.\n * @fires igcDeselect - Emitted when a button is deselected through user interaction.\n *\n * @csspart group - The button group container.\n */\n@themes({\n  light: { bootstrap, material, fluent, indigo },\n  dark: { bootstrap, material, fluent, indigo },\n})\nexport default class IgcButtonGroupComponent extends EventEmitterMixin<\n  IgcButtonGroupComponentEventMap,\n  Constructor<LitElement>\n>(LitElement) {\n  public static readonly tagName = 'igc-button-group';\n  public static styles = styles;\n\n  public static register() {\n    registerComponent(this, IgcToggleButtonComponent);\n  }\n\n  private _selectedItems: Set<string> = new Set();\n\n  private mutationObserver: MutationObserver = this.setMutationsObserver();\n  private observerConfig: MutationObserverInit = {\n    attributeFilter: ['selected'],\n    childList: true,\n    subtree: true,\n  };\n\n  private get _selectedButtons(): Array<IgcToggleButtonComponent> {\n    return this.toggleButtons.filter((b) => b.selected);\n  }\n\n  @queryAssignedElements({ selector: 'igc-toggle-button' })\n  private toggleButtons!: Array<IgcToggleButtonComponent>;\n\n  /**\n   * Disables all buttons inside the group.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Sets the orientation of the buttons in the group.\n   * @attr\n   */\n  @property({ reflect: true })\n  public alignment: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Controls the mode of selection for the button group.\n   * @attr\n   */\n  @property({ reflect: false })\n  public selection: 'single' | 'single-required' | 'multiple' = 'single';\n\n  /**\n   * Gets/Sets the currently selected buttons (their values).\n   * @attr\n   */\n  @property({ attribute: 'selected-items', type: Array, reflect: false })\n  public get selectedItems() {\n    return this._selectedButtons.map((b) => b.value).filter((v) => v);\n  }\n\n  public set selectedItems(values: string[]) {\n    if (values && values.length) {\n      this._selectedItems = new Set(values);\n      this.setSelection(this._selectedItems);\n    }\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  protected updateDisabledState() {\n    this.toggleButtons.forEach((b) => (b.disabled = this.disabled));\n  }\n\n  @watch('selection', { waitUntilFirstUpdate: true })\n  protected updateSelectionState() {\n    if (this._selectedButtons.length) {\n      this.toggleButtons.forEach((b) => (b.selected = false));\n    }\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.mutationObserver.observe(this, this.observerConfig);\n  }\n\n  public override disconnectedCallback() {\n    this.mutationObserver.disconnect();\n    super.disconnectedCallback();\n  }\n\n  protected override firstUpdated() {\n    if (this.disabled) {\n      this.updateDisabledState();\n    }\n\n    const buttons = this._selectedButtons;\n\n    if (buttons.length) {\n      if (this.selection !== 'multiple') {\n        const index = buttons.indexOf(buttons.at(-1)!);\n\n        for (let i = 0; i < index; i++) {\n          buttons[i].selected = false;\n        }\n      }\n    } else {\n      this.setSelection(this._selectedItems);\n    }\n  }\n\n  private handleClick(event: MouseEvent) {\n    const button = event\n      .composedPath()\n      .find(\n        (element) => element instanceof IgcToggleButtonComponent\n      ) as IgcToggleButtonComponent;\n\n    if (button) {\n      this.selection === 'multiple'\n        ? this.handleMultipleSelection(button)\n        : this.handleSingleSelection(button);\n    }\n  }\n\n  private handleSingleSelection(button: IgcToggleButtonComponent) {\n    const singleRequired = this.selection === 'single-required';\n    const selectedButton = this._selectedButtons.at(0);\n    const isSame = selectedButton && selectedButton.value === button.value;\n\n    if (selectedButton) {\n      if (singleRequired && isSame) return;\n      this.emitDeselectEvent(selectedButton);\n    }\n    if (isSame) return;\n    this.emitSelectEvent(button);\n  }\n\n  private handleMultipleSelection(button: IgcToggleButtonComponent) {\n    button.selected\n      ? this.emitDeselectEvent(button)\n      : this.emitSelectEvent(button);\n  }\n\n  private emitSelectEvent(button: IgcToggleButtonComponent) {\n    const select = this.emitEvent('igcSelect', {\n      cancelable: true,\n      detail: button.value,\n    });\n\n    if (select) {\n      button.selected = true;\n    }\n  }\n\n  private emitDeselectEvent(button: IgcToggleButtonComponent) {\n    const deselect = this.emitEvent('igcDeselect', {\n      cancelable: true,\n      detail: button.value,\n    });\n\n    if (deselect) {\n      button.selected = false;\n    }\n  }\n\n  private setSelection(values: Set<string>) {\n    for (const button of this.toggleButtons) {\n      if (values.has(button.value)) {\n        button.selected = true;\n        if (this.selection !== 'multiple') {\n          break;\n        }\n      }\n    }\n  }\n\n  private setMutationsObserver() {\n    return new MutationObserver((records, observer) => {\n      // Stop observing while handling changes\n      observer.disconnect();\n\n      if (this.selection !== 'multiple' && this._selectedButtons.length > 1) {\n        const added = this.getAddedButtons(records);\n\n        const button = added.buttons.length\n          ? (added.buttons.at(-1) as IgcToggleButtonComponent)\n          : (records.at(-1)?.target as IgcToggleButtonComponent);\n\n        const index = this.toggleButtons.indexOf(button);\n\n        this.toggleButtons.forEach((b, i) => {\n          if (b.selected && i !== index) {\n            b.selected = false;\n          }\n        });\n      }\n\n      // Watch for changes again\n      observer.observe(this, this.observerConfig);\n    });\n  }\n\n  private getAddedButtons(records: MutationRecord[]) {\n    const added: { buttons: IgcToggleButtonComponent[] } = { buttons: [] };\n\n    records\n      .filter((x) => x.type === 'childList')\n      .reduce((prev, curr) => {\n        prev.buttons = prev.buttons.concat(\n          Array.from(curr.addedNodes).map(\n            (node) => node as IgcToggleButtonComponent\n          )\n        );\n        return prev;\n      }, added);\n\n    return added;\n  }\n\n  protected override render() {\n    return html`\n      <div\n        part=\"group\"\n        role=\"group\"\n        aria-disabled=${this.disabled}\n        @click=${this.handleClick}\n      >\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-button-group': IgcButtonGroupComponent;\n  }\n}\n"]}