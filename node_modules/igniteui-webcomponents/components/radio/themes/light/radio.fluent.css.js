import { css } from 'lit';
export const styles = css `:host {
  --hover-color: var(--ig-radio-hover-color, hsla(var(--ig-gray-700), var(--ig-gray-a)));
  --fill-hover-border-color: var(--ig-radio-fill-hover-border-color, hsla(var(--ig-primary-800), var(--ig-primary-a)));
  --label-color: var(--ig-radio-label-color, hsla(var(--ig-gray-900), var(--ig-gray-a)));
  --empty-color: var(--ig-radio-empty-color, hsla(var(--ig-gray-900), var(--ig-gray-a)));
  --fill-color: var(--ig-radio-fill-color, hsla(var(--ig-primary-500), var(--ig-primary-a)));
  --fill-color-hover: var(--ig-radio-fill-color-hover, hsla(var(--ig-primary-800), var(--ig-primary-a)));
  --disabled-color: var(--ig-radio-disabled-color, hsla(var(--ig-gray-400), var(--ig-gray-a)));
  --disabled-label-color: var(--ig-radio-disabled-label-color, hsla(var(--ig-gray-500), var(--ig-gray-a)));
  --error-color: var(--ig-radio-error-color, hsla(var(--ig-error-500), var(--ig-error-a)));
  --error-color-hover: var(--ig-radio-error-color-hover, hsla(var(--ig-error-700), var(--ig-error-a)));
  --focus-outline-color: var(--ig-radio-focus-outline-color, hsla(var(--ig-gray-700), var(--ig-gray-a)));
}

[part~=label] {
  font-family: var(--ig-body-2-font-family, var(--ig-font-family));
  font-size: var(--ig-body-2-font-size);
  font-weight: var(--ig-body-2-font-weight);
  font-style: var(--ig-body-2-font-style);
  line-height: var(--ig-body-2-line-height);
  letter-spacing: var(--ig-body-2-letter-spacing);
  text-transform: var(--ig-body-2-text-transform);
  margin-top: var(--ig-body-2-margin-top);
  margin-bottom: var(--ig-body-2-margin-bottom);
  color: var(--label-color);
}

:host [part~=base] {
  -webkit-transition-duration: 0.1s;
          transition-duration: 0.1s;
  gap: 0.375rem;
}

:host [part~=control] {
  border-radius: var(--size);
  width: var(--size);
  height: var(--size);
  min-width: var(--size);
  -webkit-transition: none;
  transition: none;
}
:host [part~=control]::before, :host [part~=control]::after {
  border-radius: calc(var(--size) / 2);
  width: var(--size);
  height: var(--size);
  inset-inline-start: 0;
  top: 0;
  -webkit-transform: none;
      -ms-transform: none;
          transform: none;
}
:host [part~=control]::before {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0);
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
  z-index: 1;
}
:host [part~=control]::after {
  border: 0.0625rem solid var(--empty-color);
}

:host [part="control checked"]::before {
  border-color: var(--fill-color);
  background: var(--fill-color);
  -webkit-transform: scale(0.5);
      -ms-transform: scale(0.5);
          transform: scale(0.5);
}
:host [part="control checked"]::after {
  border-color: var(--fill-color);
}

[part~=focused] {
  position: relative;
}
[part~=focused]::after {
  content: "";
  position: absolute;
  top: -0.125rem;
  left: -0.125rem;
  -webkit-box-shadow: 0 0 0 0.0625rem var(--focus-outline-color);
          box-shadow: 0 0 0 0.0625rem var(--focus-outline-color);
  width: calc(100% + 0.125rem * 2);
  height: calc(100% + 0.125rem * 2);
}
[part~=focused] [part=control]::before {
  background: var(--hover-color);
}

:host(:hover) [part=control]::before {
  background: var(--hover-color);
  -webkit-transform: scale(0.5);
      -ms-transform: scale(0.5);
          transform: scale(0.5);
}
:host(:hover) [part="control checked"]::after {
  border-color: var(--fill-hover-border-color);
}
:host(:hover) [part="control checked"]::before {
  background: var(--fill-color-hover);
  border-color: var(--fill-hover-border-color);
}

:host(:not([disabled])[invalid]:hover) [part=control]::after {
  border-color: var(--error-color-hover);
}
:host(:not([disabled])[invalid]:hover) [part=control]::before {
  background: var(--error-color-hover);
}
:host(:not([disabled])[invalid]:hover) [part="control checked"]::after {
  border-color: var(--error-color-hover);
}
:host(:not([disabled])[invalid]:hover) [part="control checked"]::before {
  background: var(--error-color-hover);
}

:host(:not([disabled])[invalid]) [part~=label] {
  color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=control]::after {
  border-color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part="control checked"]::before {
  background: var(--error-color);
}
:host(:not([disabled])[invalid]) [part=focused] [part=control]::after {
  border-color: var(--error-color-hover);
}
:host(:not([disabled])[invalid]) [part=focused] [part=control]::before {
  background: var(--error-color-hover);
}

:host([disabled]) [part~=label],
:host(:disabled) [part~=label] {
  color: var(--disabled-label-color);
}
:host([disabled]) [part~=control]::after,
:host(:disabled) [part~=control]::after {
  border-color: var(--disabled-color);
}
:host([disabled]) [part="control checked"]::before,
:host(:disabled) [part="control checked"]::before {
  background: var(--disabled-color);
  border-color: var(--disabled-color);
}`;
//# sourceMappingURL=radio.fluent.css.js.map