import { css } from 'lit';
export const styles = css `[part~=ripple] {
  border-radius: var(--size);
  display: block;
  position: absolute;
  top: calc(50% - 1.25rem);
  width: calc(var(--size) * 2);
  height: calc(var(--size) * 2);
  min-width: calc(var(--size) * 2);
  overflow: hidden;
  pointer-events: none;
  -webkit-filter: opacity(1);
          filter: opacity(1);
}

:host {
  --hover-color: var(--ig-radio-hover-color, transparent);
  --fill-hover-border-color: var(--ig-radio-fill-hover-border-color, hsla(var(--ig-secondary-500), var(--ig-secondary-a)));
  --label-color: var(--ig-radio-label-color, hsla(var(--ig-gray-900), var(--ig-gray-a)));
  --empty-color: var(--ig-radio-empty-color, hsla(var(--ig-gray-600), var(--ig-gray-a)));
  --fill-color: var(--ig-radio-fill-color, hsla(var(--ig-secondary-500), var(--ig-secondary-a)));
  --fill-color-hover: var(--ig-radio-fill-color-hover, hsla(var(--ig-secondary-500), var(--ig-secondary-a)));
  --disabled-color: var(--ig-radio-disabled-color, hsla(var(--ig-gray-400), var(--ig-gray-a)));
  --disabled-label-color: var(--ig-radio-disabled-label-color, hsla(var(--ig-gray-400), var(--ig-gray-a)));
  --error-color: var(--ig-radio-error-color, hsla(var(--ig-error-500), var(--ig-error-a)));
  --error-color-hover: var(--ig-radio-error-color-hover, hsla(var(--ig-error-500), var(--ig-error-a)));
}

[part~=label] {
  color: var(--label-color);
}

[part~=base] {
  gap: 0.125rem;
}
[part~=base]:hover [part~=ripple] {
  background: var(--empty-color);
  opacity: 0.06;
}
[part~=base]:hover [part="ripple checked"] {
  background: var(--fill-color);
  opacity: 0.06;
}
[part~=base]:focus-within [part=ripple] {
  background: var(--empty-color);
  opacity: 0.12;
}
[part~=base]:focus-within [part="ripple checked"] {
  background: var(--fill-color);
  opacity: 0.12;
}

[part~=control] {
  border-radius: var(--size);
  position: relative;
}
[part~=control]::before, [part~=control]::after {
  border-radius: calc(var(--size) / 2);
}
[part~=control]::after {
  border: calc(var(--size) / 10) solid var(--empty-color);
}

[part="control checked"]::before {
  border-color: var(--fill-color);
  background: var(--fill-color);
}
[part="control checked"]::after {
  border-color: var(--fill-color);
}

:host(:not([disabled])[invalid]) [part~=label] {
  color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=control]::after {
  border-color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part="control checked"]::before {
  background: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=base]:hover [part~=ripple] {
  background: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=base]:focus-within [part~=ripple] {
  background: var(--error-color);
}

:host([disabled]) [part~=label],
:host(:disabled) [part~=label] {
  color: var(--disabled-label-color);
}
:host([disabled]) [part~=control]::after,
:host(:disabled) [part~=control]::after {
  border-color: var(--disabled-color);
}
:host([disabled]) [part="control checked"]::before,
:host(:disabled) [part="control checked"]::before {
  background: var(--disabled-color);
  border-color: var(--disabled-color);
}`;
//# sourceMappingURL=radio.material.css.js.map