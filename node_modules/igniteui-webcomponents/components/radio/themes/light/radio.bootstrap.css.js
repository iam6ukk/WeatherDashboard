import { css } from 'lit';
export const styles = css `:host {
  --hover-color: var(--ig-radio-hover-color, transparent);
  --fill-hover-border-color: var(--ig-radio-fill-hover-border-color, hsla(var(--ig-gray-50), var(--ig-gray-a)));
  --label-color: var(--ig-radio-label-color, hsla(var(--ig-gray-900), var(--ig-gray-a)));
  --empty-color: var(--ig-radio-empty-color, hsla(var(--ig-gray-500), var(--ig-gray-a)));
  --fill-color: var(--ig-radio-fill-color, hsla(var(--ig-primary-500), var(--ig-primary-a)));
  --fill-color-hover: var(--ig-radio-fill-color-hover, hsla(var(--ig-gray-50), var(--ig-gray-a)));
  --disabled-color: var(--ig-radio-disabled-color, hsla(var(--ig-primary-200), var(--ig-primary-a)));
  --disabled-label-color: var(--ig-radio-disabled-label-color, hsla(var(--ig-gray-400), var(--ig-gray-a)));
  --error-color: var(--ig-radio-error-color, hsla(var(--ig-error-500), var(--ig-error-a)));
  --error-color-hover: var(--ig-radio-error-color-hover, hsla(var(--ig-error-100), var(--ig-error-a)));
  --focus-outline-color: var(--ig-radio-focus-outline-color, hsla(var(--ig-primary-200), var(--ig-primary-a)));
}
:host::part(base) {
  -webkit-transition: none;
  transition: none;
}

[part~=label] {
  color: var(--label-color);
}

[part~=base] {
  gap: 0.5rem;
}

[part~=control] {
  --size: 1rem;
  border-radius: var(--size);
  width: var(--size);
  height: var(--size);
  min-width: var(--size);
  background: none;
  -webkit-transition: transparent;
  transition: transparent;
}
[part~=control]::before, [part~=control]::after {
  -webkit-transition: none;
  transition: none;
  border-radius: calc(var(--size) / 2);
}
[part~=control]::before {
  -webkit-transform: translate(-50%, -50%) scale(0.375);
      -ms-transform: translate(-50%, -50%) scale(0.375);
          transform: translate(-50%, -50%) scale(0.375);
}
[part~=control]::after {
  width: inherit;
  height: inherit;
  min-width: inherit;
  border: 0.0625rem solid var(--empty-color);
}

[part~=focused] [part~=control] {
  -webkit-box-shadow: 0 0 0 0.125rem var(--focus-outline-color);
          box-shadow: 0 0 0 0.125rem var(--focus-outline-color);
}
[part~=focused] [part~=control]::after {
  border-color: var(--fill-color);
}

[part="control checked"]::after {
  background: var(--fill-color);
  border-color: var(--fill-color);
}
[part="control checked"]::before {
  border-color: var(--fill-hover-border-color);
  background: var(--fill-hover-border-color);
}

:host(:not([disabled])[invalid]) [part~=label],
:host(:not(:disabled)[invalid]) [part~=label] {
  color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=control]::after,
:host(:not(:disabled)[invalid]) [part~=control]::after {
  border-color: var(--error-color);
}
:host(:not([disabled])[invalid]) [part="control checked"]::after,
:host(:not(:disabled)[invalid]) [part="control checked"]::after {
  background: var(--error-color);
}
:host(:not([disabled])[invalid]) [part~=focused] [part~=control],
:host(:not(:disabled)[invalid]) [part~=focused] [part~=control] {
  -webkit-box-shadow: 0 0 0 0.125rem var(--error-color-hover);
          box-shadow: 0 0 0 0.125rem var(--error-color-hover);
}

:host([disabled]) [part~=label],
:host(:disabled) [part~=label] {
  color: var(--disabled-label-color);
}
:host([disabled]) [part=control]::after,
:host(:disabled) [part=control]::after {
  border-color: var(--disabled-label-color);
}
:host([disabled]) [part="control checked"]::after,
:host(:disabled) [part="control checked"]::after {
  background: var(--disabled-color);
  border-color: var(--disabled-color);
}`;
//# sourceMappingURL=radio.bootstrap.css.js.map