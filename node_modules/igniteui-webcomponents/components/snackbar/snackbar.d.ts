import { LitElement } from 'lit';
import type { Constructor } from '../common/mixins/constructor.js';
export interface IgcSnackbarEventMap {
    igcAction: CustomEvent<void>;
}
declare const IgcSnackbarComponent_base: import("../common/mixins/constructor.js").AbstractConstructor<import("../common/mixins/event-emitter.js").EventEmitterInterface<IgcSnackbarEventMap>> & Constructor<LitElement>;
/**
 * A snackbar component is used to provide feedback about an operation
 * by showing a brief message at the bottom of the screen.
 *
 * @element igc-snackbar
 *
 * @slot - Renders the snackbar content.
 *
 * @fires igcAction - Emitted when the snackbar action button is clicked.
 *
 * @csspart base - The base wrapper of the snackbar component.
 * @csspart message - The snackbar message.
 * @csspart action - The snackbar action button.
 */
export default class IgcSnackbarComponent extends IgcSnackbarComponent_base {
    static readonly tagName = "igc-snackbar";
    static styles: import("lit").CSSResult;
    static register(): void;
    private autoHideTimeout;
    private animationPlayer;
    protected content: HTMLElement;
    /**
     * Determines whether the snackbar is opened.
     * @attr
     */
    open: boolean;
    /**
     * Determines the duration in ms in which the snackbar will be visible.
     * @attr display-time
     */
    displayTime: number;
    /**
     * Determines whether the snackbar should close after the displayTime is over.
     * @attr keep-open
     */
    keepOpen: boolean;
    /**
     * Sets the position of the snackbar.
     * @attr position
     */
    position: 'bottom' | 'middle' | 'top';
    /**
     * The snackbar action button.
     * @attr action-text
     */
    actionText: string;
    protected firstUpdated(): void;
    private toggleAnimation;
    /** Opens the snackbar. */
    show(): void;
    /** Closes the snackbar. */
    hide(): Promise<void>;
    /** Toggles the open state of the component. */
    toggle(): void;
    private handleClick;
    protected render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'igc-snackbar': IgcSnackbarComponent;
    }
}
export {};
